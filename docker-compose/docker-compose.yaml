version: "3.8" # Updated to a more common recent version

services:
  postgresdb:
    image: postgres:13 # Using postgres:13 like in our previous setup
    hostname: metastore_db
    container_name: tutorial_postgres # Added for clarity
    restart: always
    environment:
      POSTGRES_USER: hive # From tutorial
      POSTGRES_PASSWORD: hive # From tutorial
      POSTGRES_DB: metastore # From tutorial
    volumes:
      - postgres_data_tutorial:/var/lib/postgresql/data # Use a named volume
    networks:
      - trino_network_tutorial # Use a custom network

  hive-metastore:
    image: 'starburstdata/hive:3.1.2-e.18' # As per tutorial
    hostname: hive-metastore
    container_name: tutorial_hive_metastore # Added for clarity
    ports:
      - '9083:9083'
    restart: always
    environment:
      HIVE_METASTORE_DRIVER: org.postgresql.Driver
      HIVE_METASTORE_JDBC_URL: jdbc:postgresql://metastore_db:5432/metastore # Uses service name
      HIVE_METASTORE_USER: hive
      HIVE_METASTORE_PASSWORD: hive
      # HIVE_METASTORE_WAREHOUSE_DIR: s3a://spark-delta-lake/ # Points to a bucket in MinIO
      # This warehouse dir needs to be adjusted to a bucket we create in our MinIO service
      HIVE_METASTORE_WAREHOUSE_DIR: s3a://trino-data/ # Example: new bucket for this setup
      
      # Configure to use the MinIO service within this docker-compose
      S3_ENDPOINT: http://minio:9000 # Use service name 'minio'
      S3_ACCESS_KEY: minioadmin # Use consistent MinIO credentials
      S3_SECRET_KEY: minioadmin # Use consistent MinIO credentials
      S3_PATH_STYLE_ACCESS: "true"
      REGION: "" # Correct for MinIO
      HIVE_METASTORE_USERS_IN_ADMIN_ROLE: "admin" # Or "hive", "trino"
      # Add these for S3A client within Hive Metastore, as per our previous findings
      # Ensure the starburstdata/hive image's entrypoint respects these or HADOOP_OPTS for S3A
      # Alternatively, these might need to be set via a core-site.xml mounted if the image supports it
      # For starburstdata/hive, it often picks up S3_ENDPOINT, S3_ACCESS_KEY, S3_SECRET_KEY directly
      # for its internal S3A client used with HIVE_METASTORE_WAREHOUSE_DIR.
      # Let's assume it does. If not, we might need SERVICE_OPTS or to mount core-site.xml for HMS too.
    healthcheck:
      # The tutorial's healthcheck is good if bash is available
      test: ["CMD-SHELL", "exec 6<> /dev/tcp/localhost/9083 || exit 1"] # Changed from bash -c "..." to CMD-SHELL
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 90s
    depends_on:
      postgresdb:
        condition: service_healthy
      minio: # Hive Metastore should wait for MinIO if its warehouse is on S3
        condition: service_healthy
    networks:
      - trino_network_tutorial

  trino-coordinator:
    image: 'trinodb/trino:400' # As per tutorial
    hostname: trino-coordinator
    container_name: tutorial_trino_coordinator # Added for clarity
    restart: always
    ports:
      - '8080:8080'
    volumes:
      # IMPORTANT: The tutorial expects host paths like /data/trino/etc
      # We will adapt this to use relative paths for better portability,
      # assuming you have a 'trino-files-tutorial' directory next to your docker-compose.yml
      # where config.properties, node.properties, jvm.config, and catalog/ (for hive.properties, delta.properties) reside.
      - ./trino-files-tutorial/etc:/etc/trino
    depends_on: # Trino depends on Hive Metastore
      hive-metastore:
        condition: service_healthy # Wait for HMS healthcheck to pass
      minio: # Trino also depends on MinIO
        condition: service_healthy
    networks:
      - trino_network_tutorial
    # Add extra_hosts for host.docker.internal if any config still uses it,
    # but best to use service names like 'minio' and 'hive-metastore'.
    # For this tutorial, direct service name resolution is better.

  minio: # Added MinIO service
    image: minio/minio:latest
    hostname: minio
    container_name: tutorial_minio # Added for clarity
    ports:
      - "9000:9000" # API port
      - "9001:9001" # Console port
    volumes:
      - minio_data_tutorial:/data # Use a named volume
    environment:
      MINIO_ROOT_USER: minioadmin # Consistent credentials
      MINIO_ROOT_PASSWORD: minioadmin # Consistent credentials
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - trino_network_tutorial

volumes:
  postgres_data_tutorial: # Renamed volume
  minio_data_tutorial:    # Added volume for MinIO

networks:
  trino_network_tutorial: # Renamed network
    driver: bridge